#!/usr/bin/env ruby
# vim: set fileencoding=utf-8 :
$VERBOSE = true

require 'optparse'
require 'rubygems'
require 'mechanize'
require 'twitter'

opt = OptionParser.new( "#{$PROGRAM_NAME}: [options...] [http://atnd.org/events/]EVENT_ID")
opts = { #default options
  :list_name => nil,
  :evt_service => :atnd,
  :token_path => 'token.txt',
  :follow => false
}
begin
  opt.on('-l', '--list-name=LIST_NAME',
         "The name of twitter list to create or to add. When not specified, don't make the list."){|v| opts[:list_name] = v }
  opt.on('-f', '--[no-]follow', 'Follow the listed people. Default: FALSE.'){|v| opts[:follow] = v }
  opt.on('-e', '--event-service=SERVICE_NAME', 'The event page is of SERVICE_NAME'){|v| opts[:evt_service] = v.to_sym }
  opt.on('-t', '--token=TOKEN_FILE', 'token file.'){|v| opts[:token_path] = v }
  opt.order!(ARGV)
rescue OptionParser::ParseError
  fail "#$PROGRAM_NAME: unrecognized option found. See '#$PROGRAM_NAME --help' for the available options."
end
SERVICES = {
  :atnd => {
    :host => 'atnd.org',
    :member_sel => '.member_name>li>a',
    :tw_id_sel => "//div[@id='user_info']/dl/dt[.='Twitter ID']/../dd/a",
  }
}

HREF = 'href'
agent = Mechanize.new
service = opts[:evt_service]
member_sel = SERVICES[service][:member_sel]
tw_id_sel = SERVICES[service][:tw_id_sel]

tw_ids = agent.get( evt_uri ).search( member_sel ).map{|a|
  agent.get(a[HREF]).at( tw_id_sel ).inner_text
}

ct_f = File.open(opts[:token_path])
ck, cs, at, as, user_id = ct_f.readlines
oa = Twitter::OAuth.new ck.chomp, cs.chomp
oa.authorize_from_access at.chomp, as.chomp

tw = Twitter::Base.new oa #old version of twitter.rb. deprecated since ver 1.0

at_ids = tw_ids.map{|id| '@' + id }.join( ' ' )
if opts[:list_name]
  tw_ids.each{|id| tw.list_add_member user_id.chomp, opts[:list_name], id }
  puts "Added to '#{opts[:list_name]}':", at_ids
end

if opts[:follow]
  tw_ids.each{|id| tw.friendship_create id }
  puts "Followed people: ", at_ids
end
